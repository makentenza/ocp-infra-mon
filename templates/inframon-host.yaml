apiVersion: v1
kind: Template
metadata:
  name: inframon-host
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: inframon
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: ${NAME}
  spec:
    ports:
    - name: icingaweb
      port: 80
      targetPort: 80
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    path: /icingaweb2
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
    name: ${NAME}
  spec:
    completionDeadlineSeconds: "1800"
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    runPolicy: Serial
    source:
      contextDir: image/host/
      git:
        uri: https://github.com/makentenza/ocp-infra-mon.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: centos:7
      type: Docker
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - image: ' '
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 80
            timeoutSeconds: 3
          name: ${NAME}
          ports:
          - containerPort: 80
          readinessProbe:
            initialDelaySeconds: 3
            tcpSocket:
              port: 80
            timeoutSeconds: 3
          volumeMounts:
          - mountPath: /var/lib.mysql
            name: mysql-data
          - mountPath: /etc/icinga2/conf.d
            name: icinga-config
          - mountPath: /etc/icinga2/conf.d/map
            name: nrpe-hosts
        serviceAccount: inframon
        serviceAccountName: inframon
        volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: ${MYSQL_PVC}
        - name: icinga-config
          persistentVolumeClaim:
            claimName: ${ICINCFG_PVC}
        - name: nrpe-hosts
          configMap:
            defaultMode: 420
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: inframon-host
- description: Persistent Volume Claim to be used for MySQL data persistence.
  displayName: MySQL Data Claim
  name: MYSQL_PVC
  required: true
  value: mysql-data
- description: Persistent Volume Claim to be used for Icinga2 config persistence.
  displayName: Icinga Config Claim
  name: ICINCFG_PVC
  required: true
  value: icinga-config
- description: The exposed hostname that will route to the inframon-host service, if left blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
